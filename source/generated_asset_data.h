#if !defined(GENERATED_ASSET_DATA_H) && defined(SNAIL_JUMPY_USE_PROCESSED_ASSETS)
#define GENERATED_ASSET_DATA_H
internal inline void
InitializeProcessedAssets(asset_system *Assets, void *Data, u32 DataSize){
    ta_system *TA = &TextAdventure;
    memory_arena *Memory = &Assets->Memory;
    {
        TA->Theme.BasicFont = AssetID(font_basic); 
        TA->Theme.TitleFont = AssetID(font_basic_bold); 
        TA->Theme.BackgroundColor = MakeColor(0.039216f, 0.050980f, 0.290196f, 1.000000f); 
        TA->Theme.CursorColor = MakeColor(0.949020f, 0.949020f, 0.949020f, 1.000000f); 
        TA->Theme.SelectionColor = MakeColor(0.137255f, 0.172549f, 0.549020f, 1.000000f); 
        TA->Theme.BasicFancy = MakeFancyFormat(MakeColor(0.95f, 0.95f, 0.95f, 1.00f), MakeColor(0.00f, 0.00f, 0.00f, 0.00f), 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f);
        TA->Theme.RoomTitleFancy = MakeFancyFormat(MakeColor(1.00f, 0.41f, 0.41f, 1.00f), MakeColor(0.00f, 0.00f, 0.00f, 0.00f), 1.00f, 6.28f, 3.14f, 0.00f, 0.00f, 0.00f);
        TA->Theme.ItemFancy = MakeFancyFormat(MakeColor(0.14f, 0.89f, 0.89f, 1.00f), MakeColor(0.00f, 0.00f, 0.00f, 0.00f), 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f);
        TA->Theme.RoomFancy = MakeFancyFormat(MakeColor(1.00f, 0.41f, 0.41f, 1.00f), MakeColor(0.00f, 0.00f, 0.00f, 0.00f), 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f);
        TA->Theme.DirectionFancy = MakeFancyFormat(MakeColor(0.37f, 0.92f, 0.51f, 1.00f), MakeColor(0.00f, 0.00f, 0.00f, 0.00f), 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f);
        TA->Theme.MiscFancy = MakeFancyFormat(MakeColor(0.96f, 0.84f, 0.34f, 1.00f), MakeColor(0.00f, 0.00f, 0.00f, 0.00f), 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f);
        TA->Theme.MoodFancy = MakeFancyFormat(MakeColor(0.35f, 0.67f, 0.54f, 1.00f), MakeColor(0.00f, 0.00f, 0.00f, 0.00f), 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f);
        TA->Theme.ResponseFancies[0] = MakeFancyFormat(MakeColor(0.56f, 0.39f, 1.00f, 1.00f), MakeColor(0.00f, 0.00f, 0.00f, 0.00f), 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f);
        TA->Theme.ResponseFancies[1] = MakeFancyFormat(MakeColor(0.90f, 0.31f, 0.80f, 1.00f), MakeColor(0.56f, 0.39f, 1.00f, 1.00f), 0.00f, 0.00f, 0.00f, 3.14f, 0.31f, 0.00f);
        TA->Theme.DescriptionFancies[0] = TA->Theme.BasicFancy;
        TA->Theme.DescriptionFancies[1] = TA->Theme.DirectionFancy;
        TA->Theme.DescriptionFancies[2] = TA->Theme.RoomFancy;
        TA->Theme.DescriptionFancies[3] = TA->Theme.ItemFancy;
        TA->Theme.DescriptionFancies[4] = TA->Theme.MiscFancy;
        TA->Theme.DescriptionFancies[5] = TA->Theme.MoodFancy;
    }
    Assets->SoundEffects[1].Sound.ChannelCount = 2;
    Assets->SoundEffects[1].Sound.SampleCount  = 2013;
    Assets->SoundEffects[1].Sound.BaseSpeed    = 1.000000f;
    Assets->SoundEffects[1].VolumeMultiplier   = 1.000000f;
    Assert(4 < DataSize);
    Assets->SoundEffects[1].Sound.Samples = (s16 *)((u8 *)Data+4);
    Assets->SoundEffects[2].Sound.ChannelCount = 2;
    Assets->SoundEffects[2].Sound.SampleCount  = 26368;
    Assets->SoundEffects[2].Sound.BaseSpeed    = 0.918750f;
    Assets->SoundEffects[2].VolumeMultiplier   = 1.000000f;
    Assert(8056 < DataSize);
    Assets->SoundEffects[2].Sound.Samples = (s16 *)((u8 *)Data+8056);
    Assets->SoundEffects[3].Sound.ChannelCount = 2;
    Assets->SoundEffects[3].Sound.SampleCount  = 2913408;
    Assets->SoundEffects[3].Sound.BaseSpeed    = 0.918750f;
    Assets->SoundEffects[3].VolumeMultiplier   = 1.000000f;
    Assert(113528 < DataSize);
    Assets->SoundEffects[3].Sound.Samples = (s16 *)((u8 *)Data+113528);
    Assets->SoundEffects[4].Sound.ChannelCount = 2;
    Assets->SoundEffects[4].Sound.SampleCount  = 64000;
    Assets->SoundEffects[4].Sound.BaseSpeed    = 0.918750f;
    Assets->SoundEffects[4].VolumeMultiplier   = 1.000000f;
    Assert(11767160 < DataSize);
    Assets->SoundEffects[4].Sound.Samples = (s16 *)((u8 *)Data+11767160);
    Assets->SoundEffects[5].Sound.ChannelCount = 2;
    Assets->SoundEffects[5].Sound.SampleCount  = 38790;
    Assets->SoundEffects[5].Sound.BaseSpeed    = 1.000000f;
    Assets->SoundEffects[5].VolumeMultiplier   = 1.000000f;
    Assert(12023160 < DataSize);
    Assets->SoundEffects[5].Sound.Samples = (s16 *)((u8 *)Data+12023160);
    Assets->SoundEffects[6].Sound.ChannelCount = 2;
    Assets->SoundEffects[6].Sound.SampleCount  = 35296;
    Assets->SoundEffects[6].Sound.BaseSpeed    = 0.918750f;
    Assets->SoundEffects[6].VolumeMultiplier   = 1.000000f;
    Assert(12178320 < DataSize);
    Assets->SoundEffects[6].Sound.Samples = (s16 *)((u8 *)Data+12178320);
    Assets->SoundEffects[7].Sound.ChannelCount = 2;
    Assets->SoundEffects[7].Sound.SampleCount  = 33075;
    Assets->SoundEffects[7].Sound.BaseSpeed    = 0.918750f;
    Assets->SoundEffects[7].VolumeMultiplier   = 1.000000f;
    Assert(12319504 < DataSize);
    Assets->SoundEffects[7].Sound.Samples = (s16 *)((u8 *)Data+12319504);
    Assets->SoundEffects[8].Sound.ChannelCount = 2;
    Assets->SoundEffects[8].Sound.SampleCount  = 43715;
    Assets->SoundEffects[8].Sound.BaseSpeed    = 1.000000f;
    Assets->SoundEffects[8].VolumeMultiplier   = 1.000000f;
    Assert(12451804 < DataSize);
    Assets->SoundEffects[8].Sound.Samples = (s16 *)((u8 *)Data+12451804);
    Assets->SoundEffects[9].Sound.ChannelCount = 2;
    Assets->SoundEffects[9].Sound.SampleCount  = 358272;
    Assets->SoundEffects[9].Sound.BaseSpeed    = 0.918750f;
    Assets->SoundEffects[9].VolumeMultiplier   = 1.000000f;
    Assert(12626664 < DataSize);
    Assets->SoundEffects[9].Sound.Samples = (s16 *)((u8 *)Data+12626664);
    Assets->SoundEffects[10].Sound.ChannelCount = 2;
    Assets->SoundEffects[10].Sound.SampleCount  = 37948;
    Assets->SoundEffects[10].Sound.BaseSpeed    = 1.000000f;
    Assets->SoundEffects[10].VolumeMultiplier   = 1.000000f;
    Assert(14059752 < DataSize);
    Assets->SoundEffects[10].Sound.Samples = (s16 *)((u8 *)Data+14059752);
    Assets->SoundEffects[11].Sound.ChannelCount = 2;
    Assets->SoundEffects[11].Sound.SampleCount  = 38656;
    Assets->SoundEffects[11].Sound.BaseSpeed    = 0.918750f;
    Assets->SoundEffects[11].VolumeMultiplier   = 1.000000f;
    Assert(14211544 < DataSize);
    Assets->SoundEffects[11].Sound.Samples = (s16 *)((u8 *)Data+14211544);
    Assets->SoundEffects[12].Sound.ChannelCount = 2;
    Assets->SoundEffects[12].Sound.SampleCount  = 28160;
    Assets->SoundEffects[12].Sound.BaseSpeed    = 0.918750f;
    Assets->SoundEffects[12].VolumeMultiplier   = 1.000000f;
    Assert(14366168 < DataSize);
    Assets->SoundEffects[12].Sound.Samples = (s16 *)((u8 *)Data+14366168);
    {
        Assets->Fonts[1].Size    = V2S(64, 72);
        Assets->Fonts[1].Height  = 7.000000;
        Assets->Fonts[1].Descent = 2.000000;
        Assert(14478808 < DataSize);
        CopyMemory(Assets->Fonts[1].Table, ((u8 *)Data+14478808), sizeof(Assets->Fonts[1].Table));
        Assert(14480344 < DataSize);
        u8 *Pixels = ((u8 *)Data+14480344);
        Assets->Fonts[1].Texture = MakeTexture();
        TextureUpload(Assets->Fonts[1].Texture, Pixels, 64, 72, 4);
    }
    {
        Assets->Fonts[2].Size    = V2S(50, 49);
        Assets->Fonts[2].Height  = 5.000000;
        Assets->Fonts[2].Descent = 0.000000;
        Assert(14498776 < DataSize);
        CopyMemory(Assets->Fonts[2].Table, ((u8 *)Data+14498776), sizeof(Assets->Fonts[2].Table));
        Assert(14500312 < DataSize);
        u8 *Pixels = ((u8 *)Data+14500312);
        Assets->Fonts[2].Texture = MakeTexture();
        TextureUpload(Assets->Fonts[2].Texture, Pixels, 50, 49, 4);
    }
    {
        Assets->Fonts[3].Size    = V2S(50, 49);
        Assets->Fonts[3].Height  = 5.000000;
        Assets->Fonts[3].Descent = 0.000000;
        Assert(14510112 < DataSize);
        CopyMemory(Assets->Fonts[3].Table, ((u8 *)Data+14510112), sizeof(Assets->Fonts[3].Table));
        Assert(14511648 < DataSize);
        u8 *Pixels = ((u8 *)Data+14511648);
        Assets->Fonts[3].Texture = MakeTexture();
        TextureUpload(Assets->Fonts[3].Texture, Pixels, 50, 49, 4);
    }
    {
        Assets->Fonts[4].Size    = V2S(45, 27);
        Assets->Fonts[4].Height  = 5.000000;
        Assets->Fonts[4].Descent = 2.000000;
        Assert(14521448 < DataSize);
        CopyMemory(Assets->Fonts[4].Table, ((u8 *)Data+14521448), sizeof(Assets->Fonts[4].Table));
        Assert(14522984 < DataSize);
        u8 *Pixels = ((u8 *)Data+14522984);
        Assets->Fonts[4].Texture = MakeTexture();
        TextureUpload(Assets->Fonts[4].Texture, Pixels, 45, 27, 4);
    }
    {
        Assets->Fonts[5].Size    = V2S(64, 85);
        Assets->Fonts[5].Height  = 15.000000;
        Assets->Fonts[5].Descent = 5.000000;
        Assert(14527844 < DataSize);
        CopyMemory(Assets->Fonts[5].Table, ((u8 *)Data+14527844), sizeof(Assets->Fonts[5].Table));
        Assert(14529380 < DataSize);
        u8 *Pixels = ((u8 *)Data+14529380);
        Assets->Fonts[5].Texture = MakeTexture();
        TextureUpload(Assets->Fonts[5].Texture, Pixels, 64, 85, 4);
    }
    TA->StartRoomID = MakeTAID(2216382443580);
    TA->StartRoomName = "Thorn lane";
    TA->RoomTable.BucketsUsed = 38;
    {
        TA->RoomTable.Keys[0] = MakeTAID(2216382444704);
        TA->RoomTable.Hashes[0] = 2216382444704;
        ta_room *Room = &TA->RoomTable.Values[0];
        Room->Name = "Tailor shop front";
        Room->Area = MakeTAID(2216382444068);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14551140 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14551140);
        Assert(14551304 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14551304);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382443580);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382445508);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[1] = MakeTAID(2216382443944);
        TA->RoomTable.Hashes[1] = 2216382443944;
        ta_room *Room = &TA->RoomTable.Values[1];
        Room->Name = "Dark alley";
        Room->Area = MakeTAID(2216382443944);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14551309 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14551309);
        Assert(14551584 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14551584);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382444772);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382443580);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[2] = MakeTAID(2216382445732);
        TA->RoomTable.Hashes[2] = 2216382445732;
        ta_room *Room = &TA->RoomTable.Values[2];
        Room->Name = "Cathedral vestry";
        Room->Area = MakeTAID(2216382443916);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14551720 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14551720);
        Assert(14552162 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14552162);
        Room->Items = MakeFullArray<ta_id>(Memory, 1);
        Room->Items[0] = MakeTAID(2216382444544);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382445664);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382445648);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[3] = MakeTAID(2216382445808);
        TA->RoomTable.Hashes[3] = 2216382445808;
        ta_room *Room = &TA->RoomTable.Values[3];
        Room->Name = "Bell tower storage room";
        Room->Area = MakeTAID(2216382443904);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14552269 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14552269);
        Assert(14552274 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14552274);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382445780);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[4] = MakeTAID(2216382445236);
        TA->RoomTable.Hashes[4] = 2216382445236;
        ta_room *Room = &TA->RoomTable.Values[4];
        Room->Name = "Plant shop greenhouse";
        Room->Area = MakeTAID(2216382443968);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14552360 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14552360);
        Assert(14552375 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14552375);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382443968);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[5] = MakeTAID(2216382445876);
        TA->RoomTable.Hashes[5] = 2216382445876;
        ta_room *Room = &TA->RoomTable.Values[5];
        Room->Name = "Bell tower lookout";
        Room->Area = MakeTAID(2216382443904);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14552468 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14552468);
        Assert(14552769 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14552769);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)2216382445856);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[6] = MakeTAID(2216382445508);
        TA->RoomTable.Hashes[6] = 2216382445508;
        ta_room *Room = &TA->RoomTable.Values[6];
        Room->Name = "Tailor shop";
        Room->Area = MakeTAID(2216382444068);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 3);
        Assert(14552774 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14552774);
        Assert(14553074 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14553074);
        Assert(14553079 < DataSize);
        Room->Descriptions[2] = (ta_string *)((u8 *)Data+14553079);
        Room->Items = MakeFullArray<ta_id>(Memory, 1);
        Room->Items[0] = MakeTAID(2216382444504);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382444704);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[7] = MakeTAID(2216382445496);
        TA->RoomTable.Hashes[7] = 2216382445496;
        ta_room *Room = &TA->RoomTable.Values[7];
        Room->Name = "Bar cellar";
        Room->Area = MakeTAID(2216382443900);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14553084 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14553084);
        Assert(14553099 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14553099);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)2216382443900);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[8] = MakeTAID(2216382444636);
        TA->RoomTable.Hashes[8] = 2216382444636;
        ta_room *Room = &TA->RoomTable.Values[8];
        Room->Name = "Bakery front";
        Room->Area = MakeTAID(2216382443892);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14553104 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14553104);
        Assert(14553323 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14553323);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382443892);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382443992);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[9] = MakeTAID(2216382444028);
        TA->RoomTable.Hashes[9] = 2216382444028;
        ta_room *Room = &TA->RoomTable.Values[9];
        Room->Name = "Shop";
        Room->Area = MakeTAID(2216382444028);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 3);
        Assert(14553442 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14553442);
        Assert(14553634 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14553634);
        Assert(14553717 < DataSize);
        Room->Descriptions[2] = (ta_string *)((u8 *)Data+14553717);
        Room->Items = MakeFullArray<ta_id>(Memory, 3);
        Room->Items[0] = MakeTAID(2216382443592);
        Room->Items[1] = MakeTAID(2216382444096);
        Room->Items[2] = MakeTAID(2216382444132);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382444624);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[10] = MakeTAID(2216382443992);
        TA->RoomTable.Hashes[10] = 2216382443992;
        ta_room *Room = &TA->RoomTable.Values[10];
        Room->Name = "Plaza SE";
        Room->Area = MakeTAID(2216382443992);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14553751 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14553751);
        Assert(14553918 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14553918);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382444652);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382444636);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382444624);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382444004);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[11] = MakeTAID(2216382445664);
        TA->RoomTable.Hashes[11] = 2216382445664;
        ta_room *Room = &TA->RoomTable.Values[11];
        Room->Name = "Cathedral altar";
        Room->Area = MakeTAID(2216382443916);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14554111 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14554111);
        Assert(14554193 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14554193);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382445680);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382445648);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382445732);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[12] = MakeTAID(2216382445704);
        TA->RoomTable.Hashes[12] = 2216382445704;
        ta_room *Room = &TA->RoomTable.Values[12];
        Room->Name = "Cathedral spiral staircase";
        Room->Area = MakeTAID(2216382443904);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14554338 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14554338);
        Assert(14554597 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14554597);
        Room->Items = MakeFullArray<ta_id>(Memory, 1);
        Room->Items[0] = MakeTAID(2216382444592);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382445648);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)2216382445780);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)9, (asset_tag_id)12, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[13] = MakeTAID(2216382445780);
        TA->RoomTable.Hashes[13] = 2216382445780;
        ta_room *Room = &TA->RoomTable.Values[13];
        Room->Name = "Bell tower programming room";
        Room->Area = MakeTAID(2216382443904);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14554724 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14554724);
        Assert(14554729 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14554729);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382445808);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)2216382445832);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)2216382445704);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[14] = MakeTAID(2216382444680);
        TA->RoomTable.Hashes[14] = 2216382444680;
        ta_room *Room = &TA->RoomTable.Values[14];
        Room->Name = "Inn front";
        Room->Area = MakeTAID(2216382443964);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14554809 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14554809);
        Assert(14554986 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14554986);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382445400);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382444004);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382444036);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382443580);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[15] = MakeTAID(2216382445400);
        TA->RoomTable.Hashes[15] = 2216382445400;
        ta_room *Room = &TA->RoomTable.Values[15];
        Room->Name = "Inn lobby";
        Room->Area = MakeTAID(2216382443964);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14554991 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14554991);
        Assert(14555247 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14555247);
        Room->Items = MakeFullArray<ta_id>(Memory, 1);
        Room->Items[0] = MakeTAID(2216382445260);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382444680);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)2216382445412);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[16] = MakeTAID(2216382444036);
        TA->RoomTable.Hashes[16] = 2216382444036;
        ta_room *Room = &TA->RoomTable.Values[16];
        Room->Name = "Thorn lane E";
        Room->Area = MakeTAID(2216382444036);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14555252 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14555252);
        Assert(14555269 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14555269);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382444680);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382444004);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382444692);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382443580);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[17] = MakeTAID(2216382445856);
        TA->RoomTable.Hashes[17] = 2216382445856;
        ta_room *Room = &TA->RoomTable.Values[17];
        Room->Name = "Bell tower belfrey";
        Room->Area = MakeTAID(2216382443904);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14555326 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14555326);
        Assert(14555331 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14555331);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)2216382445876);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)2216382445832);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[18] = MakeTAID(2216382445476);
        TA->RoomTable.Hashes[18] = 2216382445476;
        ta_room *Room = &TA->RoomTable.Values[18];
        Room->Name = "Bar billiard room";
        Room->Area = MakeTAID(2216382443900);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14555336 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14555336);
        Assert(14555358 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14555358);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)2216382443900);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[19] = MakeTAID(2216382443580);
        TA->RoomTable.Hashes[19] = 2216382443580;
        ta_room *Room = &TA->RoomTable.Values[19];
        Room->Name = "Thorn lane";
        Room->Area = MakeTAID(2216382443580);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14555363 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14555363);
        Assert(14555378 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14555378);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382443944);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382444036);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382444704);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382444052);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[20] = MakeTAID(2216382445436);
        TA->RoomTable.Hashes[20] = 2216382445436;
        ta_room *Room = &TA->RoomTable.Values[20];
        Room->Name = "Inn room 2";
        Room->Area = MakeTAID(2216382443964);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14555383 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14555383);
        Assert(14555425 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14555425);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382445412);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[21] = MakeTAID(2216382444668);
        TA->RoomTable.Hashes[21] = 2216382444668;
        ta_room *Room = &TA->RoomTable.Values[21];
        Room->Name = "Bar front";
        Room->Area = MakeTAID(2216382443900);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14555430 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14555430);
        Assert(14555457 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14555457);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382444004);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382444624);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382443900);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382444036);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[22] = MakeTAID(2216382445448);
        TA->RoomTable.Hashes[22] = 2216382445448;
        ta_room *Room = &TA->RoomTable.Values[22];
        Room->Name = "Inn room 3";
        Room->Area = MakeTAID(2216382443964);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14555547 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14555547);
        Assert(14555589 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14555589);
        Room->Items = MakeFullArray<ta_id>(Memory, 1);
        Room->Items[0] = MakeTAID(2216382445384);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382445412);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[23] = MakeTAID(2216382444004);
        TA->RoomTable.Hashes[23] = 2216382444004;
        ta_room *Room = &TA->RoomTable.Values[23];
        Room->Name = "Plaza SW";
        Room->Area = MakeTAID(2216382444004);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14555594 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14555594);
        Assert(14555607 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14555607);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382443980);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382443992);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382444668);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382444036);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[24] = MakeTAID(2216382443968);
        TA->RoomTable.Hashes[24] = 2216382443968;
        ta_room *Room = &TA->RoomTable.Values[24];
        Room->Name = "Plant shop";
        Room->Area = MakeTAID(2216382443968);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 3);
        Assert(14555734 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14555734);
        Assert(14556113 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14556113);
        Assert(14556233 < DataSize);
        Room->Descriptions[2] = (ta_string *)((u8 *)Data+14556233);
        Room->Items = MakeFullArray<ta_id>(Memory, 8);
        Room->Items[0] = MakeTAID(2216382444792);
        Room->Items[1] = MakeTAID(2216382444832);
        Room->Items[2] = MakeTAID(2216382444884);
        Room->Items[3] = MakeTAID(2216382445200);
        Room->Items[4] = MakeTAID(2216382445112);
        Room->Items[5] = MakeTAID(2216382445172);
        Room->Items[6] = MakeTAID(2216382445188);
        Room->Items[7] = MakeTAID(2216382445072);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382445236);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382444772);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[25] = MakeTAID(2216382445412);
        TA->RoomTable.Hashes[25] = 2216382445412;
        ta_room *Room = &TA->RoomTable.Values[25];
        Room->Name = "Inn hallway";
        Room->Area = MakeTAID(2216382443964);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14556284 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14556284);
        Assert(14556371 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14556371);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)2216382445400);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[26] = MakeTAID(2216382445832);
        TA->RoomTable.Hashes[26] = 2216382445832;
        ta_room *Room = &TA->RoomTable.Values[26];
        Room->Name = "Bell tower playing room";
        Room->Area = MakeTAID(2216382443904);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14556376 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14556376);
        Assert(14556381 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14556381);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)2216382445856);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)2216382445780);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[27] = MakeTAID(2216382444652);
        TA->RoomTable.Hashes[27] = 2216382444652;
        ta_room *Room = &TA->RoomTable.Values[27];
        Room->Name = "Cathedral front";
        Room->Area = MakeTAID(2216382443916);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14556386 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14556386);
        Assert(14556670 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14556670);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382445648);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382443992);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[28] = MakeTAID(2216382445680);
        TA->RoomTable.Hashes[28] = 2216382445680;
        ta_room *Room = &TA->RoomTable.Values[28];
        Room->Name = "Cathedral organ console";
        Room->Area = MakeTAID(2216382443916);
        Room->Tag = MakeAssetTag((asset_tag_id)8, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 3);
        Assert(14556772 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14556772);
        Assert(14556962 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14556962);
        Assert(14557038 < DataSize);
        Room->Descriptions[2] = (ta_string *)((u8 *)Data+14557038);
        Room->Items = MakeFullArray<ta_id>(Memory, 1);
        Room->Items[0] = MakeTAID(2216382445520);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382445752);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)8, (asset_tag_id)12, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)2216382445648);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382445664);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[29] = MakeTAID(2216382443892);
        TA->RoomTable.Hashes[29] = 2216382443892;
        ta_room *Room = &TA->RoomTable.Values[29];
        Room->Name = "Bakery";
        Room->Area = MakeTAID(2216382443892);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 3);
        Assert(14557196 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14557196);
        Assert(14557364 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14557364);
        Assert(14557479 < DataSize);
        Room->Descriptions[2] = (ta_string *)((u8 *)Data+14557479);
        Room->Items = MakeFullArray<ta_id>(Memory, 5);
        Room->Items[0] = MakeTAID(2216382444164);
        Room->Items[1] = MakeTAID(2216382444224);
        Room->Items[2] = MakeTAID(2216382444284);
        Room->Items[3] = MakeTAID(2216382444344);
        Room->Items[4] = MakeTAID(2216382444404);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382445460);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382444636);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[30] = MakeTAID(2216382444772);
        TA->RoomTable.Hashes[30] = 2216382444772;
        ta_room *Room = &TA->RoomTable.Values[30];
        Room->Name = "Plant shop front";
        Room->Area = MakeTAID(2216382443968);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14557535 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14557535);
        Assert(14557959 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14557959);
        Room->Items = MakeFullArray<ta_id>(Memory, 3);
        Room->Items[0] = MakeTAID(2216382444916);
        Room->Items[1] = MakeTAID(2216382444956);
        Room->Items[2] = MakeTAID(2216382445008);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382443968);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382443944);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[31] = MakeTAID(2216382445752);
        TA->RoomTable.Hashes[31] = 2216382445752;
        ta_room *Room = &TA->RoomTable.Values[31];
        Room->Name = "Cathedral maintenance room";
        Room->Area = MakeTAID(2216382443916);
        Room->Tag = MakeAssetTag((asset_tag_id)8, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 3);
        Assert(14558051 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14558051);
        Assert(14558420 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14558420);
        Assert(14558447 < DataSize);
        Room->Descriptions[2] = (ta_string *)((u8 *)Data+14558447);
        Room->Items = MakeFullArray<ta_id>(Memory, 2);
        Room->Items[0] = MakeTAID(2216382445588);
        Room->Items[1] = MakeTAID(2216382445620);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382445680);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[32] = MakeTAID(2216382443900);
        TA->RoomTable.Hashes[32] = 2216382443900;
        ta_room *Room = &TA->RoomTable.Values[32];
        Room->Name = "Bar";
        Room->Area = MakeTAID(2216382443900);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14558529 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14558529);
        Assert(14558540 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14558540);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382444668);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)0);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)2216382445476);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)2216382445496);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[33] = MakeTAID(2216382445648);
        TA->RoomTable.Hashes[33] = 2216382445648;
        ta_room *Room = &TA->RoomTable.Values[33];
        Room->Name = "Cathedral nave";
        Room->Area = MakeTAID(2216382443916);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14558611 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14558611);
        Assert(14558874 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14558874);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382445664);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)2216382445680);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382444652);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382445704);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[34] = MakeTAID(2216382444624);
        TA->RoomTable.Hashes[34] = 2216382444624;
        ta_room *Room = &TA->RoomTable.Values[34];
        Room->Name = "Shop front";
        Room->Area = MakeTAID(2216382444028);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14559113 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14559113);
        Assert(14559276 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14559276);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382443992);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382444636);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382444028);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382444668);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[35] = MakeTAID(2216382444052);
        TA->RoomTable.Hashes[35] = 2216382444052;
        ta_room *Room = &TA->RoomTable.Values[35];
        Room->Name = "Thorn lane W";
        Room->Area = MakeTAID(2216382444052);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14559439 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14559439);
        Assert(14559456 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14559456);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)2216382444724);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)2216382443580);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382444744);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)2216382444764);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[36] = MakeTAID(2216382443980);
        TA->RoomTable.Hashes[36] = 2216382443980;
        ta_room *Room = &TA->RoomTable.Values[36];
        Room->Name = "Plaza NW";
        Room->Area = MakeTAID(2216382443980);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14559461 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14559461);
        Assert(14559474 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14559474);
        Room->Items = MakeFullArray<ta_id>(Memory, 0);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382444004);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    {
        TA->RoomTable.Keys[37] = MakeTAID(2216382445424);
        TA->RoomTable.Hashes[37] = 2216382445424;
        ta_room *Room = &TA->RoomTable.Values[37];
        Room->Name = "Inn room 1";
        Room->Area = MakeTAID(2216382443964);
        Room->Tag = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14559541 < DataSize);
        Room->Descriptions[0] = (ta_string *)((u8 *)Data+14559541);
        Assert(14559781 < DataSize);
        Room->Descriptions[1] = (ta_string *)((u8 *)Data+14559781);
        Room->Items = MakeFullArray<ta_id>(Memory, 1);
        Room->Items[0] = MakeTAID(2216382445352);
        Room->Adjacents[0] = MakeTAID((u64)0);
        Room->AdjacentTags[0] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[1] = MakeTAID((u64)0);
        Room->AdjacentTags[1] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[2] = MakeTAID((u64)0);
        Room->AdjacentTags[2] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[3] = MakeTAID((u64)0);
        Room->AdjacentTags[3] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[4] = MakeTAID((u64)0);
        Room->AdjacentTags[4] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[5] = MakeTAID((u64)2216382445412);
        Room->AdjacentTags[5] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[6] = MakeTAID((u64)0);
        Room->AdjacentTags[6] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[7] = MakeTAID((u64)0);
        Room->AdjacentTags[7] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[8] = MakeTAID((u64)0);
        Room->AdjacentTags[8] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[9] = MakeTAID((u64)0);
        Room->AdjacentTags[9] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Room->Adjacents[10] = MakeTAID((u64)0);
        Room->AdjacentTags[10] = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
    }
    TA->ItemNameTable = MakeHashTable<const char *, ta_id>(Memory, ITEM_TABLE_SIZE);
    TA->ItemTable.BucketsUsed = 30;
    {
        HashTableInsert(&TA->ItemNameTable, "lush green plants", MakeTAID(2216382445200));
        TA->ItemTable.Keys[0] = MakeTAID(2216382445200);
        TA->ItemTable.Hashes[0] = 2216382445200;
        ta_item *Item = &TA->ItemTable.Values[0];
        Item->Name = "lush green plants";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 1);
        Item->Aliases[0] = "plants";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "lush";
        Item->Adjectives[1] = "green";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14559786 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14559786);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "organ pipes", MakeTAID(2216382445620));
        TA->ItemTable.Keys[1] = MakeTAID(2216382445620);
        TA->ItemTable.Hashes[1] = 2216382445620;
        ta_item *Item = &TA->ItemTable.Values[1];
        Item->Name = "organ pipes";
        Item->Tag  = MakeAssetTag((asset_tag_id)8, (asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "pipe";
        Item->Aliases[1] = "pipes";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 1);
        Item->Adjectives[0] = "organ";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14559859 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14559859);
        Assert(14559913 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14559913);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "room 1 window", MakeTAID(2216382445352));
        TA->ItemTable.Keys[2] = MakeTAID(2216382445352);
        TA->ItemTable.Hashes[2] = 2216382445352;
        ta_item *Item = &TA->ItemTable.Values[2];
        Item->Name = "room 1 window";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "window";
        Item->Aliases[1] = "windows";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 0);
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14559951 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14559951);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "dainty philodendron micans", MakeTAID(2216382445112));
        TA->ItemTable.Keys[3] = MakeTAID(2216382445112);
        TA->ItemTable.Hashes[3] = 2216382445112;
        ta_item *Item = &TA->ItemTable.Values[3];
        Item->Name = "dainty philodendron micans";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 3);
        Item->Aliases[0] = "philodendron";
        Item->Aliases[1] = "micans";
        Item->Aliases[2] = "plant";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "dainty";
        Item->Adjectives[1] = "philodendron";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14560211 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14560211);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "small silver key", MakeTAID(2216382444544));
        TA->ItemTable.Keys[4] = MakeTAID(2216382444544);
        TA->ItemTable.Hashes[4] = 2216382444544;
        ta_item *Item = &TA->ItemTable.Values[4];
        Item->Name = "small silver key";
        Item->Tag  = MakeAssetTag((asset_tag_id)8, (asset_tag_id)22, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "key";
        Item->Aliases[1] = "keys";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "small";
        Item->Adjectives[1] = "silver";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14560287 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14560287);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "bread crumbs", MakeTAID(2216382444480));
        TA->ItemTable.Keys[5] = MakeTAID(2216382444480);
        TA->ItemTable.Hashes[5] = 2216382444480;
        ta_item *Item = &TA->ItemTable.Values[5];
        Item->Name = "bread crumbs";
        Item->Tag  = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "crumb";
        Item->Aliases[1] = "crumb";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 1);
        Item->Adjectives[0] = "bread";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14560342 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14560342);
        Assert(14560401 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14560401);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "an umbrella", MakeTAID(2216382444096));
        TA->ItemTable.Keys[6] = MakeTAID(2216382444096);
        TA->ItemTable.Hashes[6] = 2216382444096;
        ta_item *Item = &TA->ItemTable.Values[6];
        Item->Name = "an umbrella";
        Item->Tag  = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 7;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "umbrella";
        Item->Aliases[1] = "umbrellas";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 0);
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14560471 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14560471);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "room 3 window", MakeTAID(2216382445384));
        TA->ItemTable.Keys[7] = MakeTAID(2216382445384);
        TA->ItemTable.Hashes[7] = 2216382445384;
        ta_item *Item = &TA->ItemTable.Values[7];
        Item->Name = "room 3 window";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "window";
        Item->Aliases[1] = "windows";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 0);
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14560524 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14560524);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "vibrant ceramic plant pot", MakeTAID(2216382445260));
        TA->ItemTable.Keys[8] = MakeTAID(2216382445260);
        TA->ItemTable.Hashes[8] = 2216382445260;
        ta_item *Item = &TA->ItemTable.Values[8];
        Item->Name = "vibrant ceramic plant pot";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "pot";
        Item->Aliases[1] = "pots";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 3);
        Item->Adjectives[0] = "vibrant";
        Item->Adjectives[1] = "ceramic";
        Item->Adjectives[2] = "plant";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14560766 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14560766);
        Assert(14560834 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14560834);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "ferns", MakeTAID(2216382445172));
        TA->ItemTable.Keys[9] = MakeTAID(2216382445172);
        TA->ItemTable.Hashes[9] = 2216382445172;
        ta_item *Item = &TA->ItemTable.Values[9];
        Item->Name = "ferns";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "fern";
        Item->Aliases[1] = "ferns";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 0);
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14560882 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14560882);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "pretty black cat", MakeTAID(2216382445304));
        TA->ItemTable.Keys[10] = MakeTAID(2216382445304);
        TA->ItemTable.Hashes[10] = 2216382445304;
        ta_item *Item = &TA->ItemTable.Values[10];
        Item->Name = "pretty black cat";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "cat";
        Item->Aliases[1] = "cats";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "pretty";
        Item->Adjectives[1] = "black";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14560953 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14560953);
        Assert(14561019 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14561019);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "cinnamon sugar churros", MakeTAID(2216382444284));
        TA->ItemTable.Keys[11] = MakeTAID(2216382444284);
        TA->ItemTable.Hashes[11] = 2216382444284;
        ta_item *Item = &TA->ItemTable.Values[11];
        Item->Name = "cinnamon sugar churros";
        Item->Tag  = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 1;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "churro";
        Item->Aliases[1] = "churros";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "cinnamon";
        Item->Adjectives[1] = "sugar";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14561067 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14561067);
        Assert(14561151 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14561151);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "a town map", MakeTAID(2216382443592));
        TA->ItemTable.Keys[12] = MakeTAID(2216382443592);
        TA->ItemTable.Hashes[12] = 2216382443592;
        ta_item *Item = &TA->ItemTable.Values[12];
        Item->Name = "a town map";
        Item->Tag  = MakeAssetTag((asset_tag_id)23, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 5;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "map";
        Item->Aliases[1] = "maps";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 1);
        Item->Adjectives[0] = "town";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14561189 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14561189);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "a lantern", MakeTAID(2216382444132));
        TA->ItemTable.Keys[13] = MakeTAID(2216382444132);
        TA->ItemTable.Hashes[13] = 2216382444132;
        ta_item *Item = &TA->ItemTable.Values[13];
        Item->Name = "a lantern";
        Item->Tag  = MakeAssetTag((asset_tag_id)24, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 10;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "lantern";
        Item->Aliases[1] = "lanterns";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 0);
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14561328 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14561328);
        Assert(14561442 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14561442);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "carrot cake muffins", MakeTAID(2216382444164));
        TA->ItemTable.Keys[14] = MakeTAID(2216382444164);
        TA->ItemTable.Hashes[14] = 2216382444164;
        ta_item *Item = &TA->ItemTable.Values[14];
        Item->Name = "carrot cake muffins";
        Item->Tag  = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 2;
        Item->Aliases = MakeFullArray<const char *>(Memory, 4);
        Item->Aliases[0] = "muffin";
        Item->Aliases[1] = "muffins";
        Item->Aliases[2] = "cake";
        Item->Aliases[3] = "cakes";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "carrot";
        Item->Adjectives[1] = "cake";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14561517 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14561517);
        Assert(14561591 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14561591);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "chocolate croissants", MakeTAID(2216382444344));
        TA->ItemTable.Keys[15] = MakeTAID(2216382444344);
        TA->ItemTable.Hashes[15] = 2216382444344;
        ta_item *Item = &TA->ItemTable.Values[15];
        Item->Name = "chocolate croissants";
        Item->Tag  = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 2;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "croissant";
        Item->Aliases[1] = "croissants";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 1);
        Item->Adjectives[0] = "chocolate";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14561665 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14561665);
        Assert(14561781 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14561781);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "honeyed almond pastries", MakeTAID(2216382444224));
        TA->ItemTable.Keys[16] = MakeTAID(2216382444224);
        TA->ItemTable.Hashes[16] = 2216382444224;
        ta_item *Item = &TA->ItemTable.Values[16];
        Item->Name = "honeyed almond pastries";
        Item->Tag  = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 3;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "pastry";
        Item->Aliases[1] = "pastries";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "honeyed";
        Item->Adjectives[1] = "almond";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14561827 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14561827);
        Assert(14561948 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14561948);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "garden gloves", MakeTAID(2216382444884));
        TA->ItemTable.Keys[17] = MakeTAID(2216382444884);
        TA->ItemTable.Hashes[17] = 2216382444884;
        ta_item *Item = &TA->ItemTable.Values[17];
        Item->Name = "garden gloves";
        Item->Tag  = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 4;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "glove";
        Item->Aliases[1] = "gloves";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "garden";
        Item->Adjectives[1] = "gardening";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14562058 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14562058);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "calatheas", MakeTAID(2216382445188));
        TA->ItemTable.Keys[18] = MakeTAID(2216382445188);
        TA->ItemTable.Hashes[18] = 2216382445188;
        ta_item *Item = &TA->ItemTable.Values[18];
        Item->Name = "calatheas";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "fern";
        Item->Aliases[1] = "calatheas";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 0);
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14562170 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14562170);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "rusty doorknob", MakeTAID(2216382445008));
        TA->ItemTable.Keys[19] = MakeTAID(2216382445008);
        TA->ItemTable.Hashes[19] = 2216382445008;
        ta_item *Item = &TA->ItemTable.Values[19];
        Item->Name = "rusty doorknob";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 4);
        Item->Aliases[0] = "doorknob";
        Item->Aliases[1] = "doorknobs";
        Item->Aliases[2] = "knob";
        Item->Aliases[3] = "knobs";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "rusty";
        Item->Adjectives[1] = "door";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14562272 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14562272);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "organ console", MakeTAID(2216382445520));
        TA->ItemTable.Keys[20] = MakeTAID(2216382445520);
        TA->ItemTable.Hashes[20] = 2216382445520;
        ta_item *Item = &TA->ItemTable.Values[20];
        Item->Name = "organ console";
        Item->Tag  = MakeAssetTag((asset_tag_id)8, (asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 4);
        Item->Aliases[0] = "organ";
        Item->Aliases[1] = "organs";
        Item->Aliases[2] = "console";
        Item->Aliases[3] = "consoles";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 3);
        Item->Adjectives[0] = "organ";
        Item->Adjectives[1] = "once";
        Item->Adjectives[2] = "great";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 4);
        Assert(14562336 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14562336);
        Assert(14562564 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14562564);
        Assert(14562747 < DataSize);
        Item->Descriptions[2] = (ta_string *)((u8 *)Data+14562747);
        Assert(14562832 < DataSize);
        Item->Descriptions[3] = (ta_string *)((u8 *)Data+14562832);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "large loaves of wheat bread", MakeTAID(2216382444404));
        TA->ItemTable.Keys[21] = MakeTAID(2216382444404);
        TA->ItemTable.Hashes[21] = 2216382444404;
        ta_item *Item = &TA->ItemTable.Values[21];
        Item->Name = "large loaves of wheat bread";
        Item->Tag  = MakeAssetTag((asset_tag_id)21, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 4;
        Item->Aliases = MakeFullArray<const char *>(Memory, 4);
        Item->Aliases[0] = "bread";
        Item->Aliases[1] = "loaf";
        Item->Aliases[2] = "loafs";
        Item->Aliases[3] = "loaves";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "large";
        Item->Adjectives[1] = "wheat";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14562879 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14562879);
        Assert(14562928 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14562928);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "silvery scindapsus", MakeTAID(2216382445072));
        TA->ItemTable.Keys[22] = MakeTAID(2216382445072);
        TA->ItemTable.Hashes[22] = 2216382445072;
        ta_item *Item = &TA->ItemTable.Values[22];
        Item->Name = "silvery scindapsus";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "scindapsus";
        Item->Aliases[1] = "plant";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 1);
        Item->Adjectives[0] = "silvery";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14563089 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14563089);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "garden shovel", MakeTAID(2216382444832));
        TA->ItemTable.Keys[23] = MakeTAID(2216382444832);
        TA->ItemTable.Hashes[23] = 2216382444832;
        ta_item *Item = &TA->ItemTable.Values[23];
        Item->Name = "garden shovel";
        Item->Tag  = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 5;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "shovel";
        Item->Aliases[1] = "shovels";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "garden";
        Item->Adjectives[1] = "gardening";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14563160 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14563160);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "bell tower key", MakeTAID(2216382444592));
        TA->ItemTable.Keys[24] = MakeTAID(2216382444592);
        TA->ItemTable.Hashes[24] = 2216382444592;
        ta_item *Item = &TA->ItemTable.Values[24];
        Item->Name = "bell tower key";
        Item->Tag  = MakeAssetTag((asset_tag_id)9, (asset_tag_id)22, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "key";
        Item->Aliases[1] = "keys";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "bell";
        Item->Adjectives[1] = "tower";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14563238 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14563238);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "leather sheet", MakeTAID(2216382444504));
        TA->ItemTable.Keys[25] = MakeTAID(2216382444504);
        TA->ItemTable.Hashes[25] = 2216382444504;
        ta_item *Item = &TA->ItemTable.Values[25];
        Item->Name = "leather sheet";
        Item->Tag  = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 3);
        Item->Aliases[0] = "sheet";
        Item->Aliases[1] = "sheets";
        Item->Aliases[2] = "leather";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 1);
        Item->Adjectives[0] = "leather";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14563304 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14563304);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "dark rugged door", MakeTAID(2216382444956));
        TA->ItemTable.Keys[26] = MakeTAID(2216382444956);
        TA->ItemTable.Hashes[26] = 2216382444956;
        ta_item *Item = &TA->ItemTable.Values[26];
        Item->Name = "dark rugged door";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "door";
        Item->Aliases[1] = "doors";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "dark";
        Item->Adjectives[1] = "rugged";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14563386 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14563386);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "mess of vines", MakeTAID(2216382444916));
        TA->ItemTable.Keys[27] = MakeTAID(2216382444916);
        TA->ItemTable.Hashes[27] = 2216382444916;
        ta_item *Item = &TA->ItemTable.Values[27];
        Item->Name = "mess of vines";
        Item->Tag  = MakeAssetTag((asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "vine";
        Item->Aliases[1] = "vines";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 1);
        Item->Adjectives[0] = "mess";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14563418 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14563418);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "organ bellows", MakeTAID(2216382445588));
        TA->ItemTable.Keys[28] = MakeTAID(2216382445588);
        TA->ItemTable.Hashes[28] = 2216382445588;
        ta_item *Item = &TA->ItemTable.Values[28];
        Item->Name = "organ bellows";
        Item->Tag  = MakeAssetTag((asset_tag_id)8, (asset_tag_id)20, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 0;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "bellow";
        Item->Aliases[1] = "bellows";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 1);
        Item->Adjectives[0] = "organ";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 2);
        Assert(14563467 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14563467);
        Assert(14563621 < DataSize);
        Item->Descriptions[1] = (ta_string *)((u8 *)Data+14563621);
    }
    {
        HashTableInsert(&TA->ItemNameTable, "plant pot", MakeTAID(2216382444792));
        TA->ItemTable.Keys[29] = MakeTAID(2216382444792);
        TA->ItemTable.Hashes[29] = 2216382444792;
        ta_item *Item = &TA->ItemTable.Values[29];
        Item->Name = "plant pot";
        Item->Tag  = MakeAssetTag((asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0, (asset_tag_id)0);
        Item->Cost = 3;
        Item->Aliases = MakeFullArray<const char *>(Memory, 2);
        Item->Aliases[0] = "pot";
        Item->Aliases[1] = "pots";
        Item->Adjectives = MakeFullArray<const char *>(Memory, 2);
        Item->Adjectives[0] = "plant";
        Item->Adjectives[1] = "plants";
        Item->Descriptions = MakeFullArray<ta_string *>(Memory, 1);
        Assert(14563660 < DataSize);
        Item->Descriptions[0] = (ta_string *)((u8 *)Data+14563660);
    }
    {
        Assert(14563711 < DataSize);
        u8 *Pixels = ((u8 *)Data+14563711);
        TA->Map.Texture = MakeTexture();
        TextureUpload(TA->Map.Texture, Pixels, 128, 104, 4);
        TA->Map.Size = V2(128.000000, 104.000000);
        TA->Map.Areas = MakeFullArray<ta_area>(Memory, 19);
        TA->Map.Areas[0] = MakeTAArea(MakeTAID((u64)2216382443880), V2(79.000000, 75.000000));
        TA->Map.Areas[1] = MakeTAArea(MakeTAID((u64)2216382443892), V2(103.000000, 41.000000));
        TA->Map.Areas[2] = MakeTAArea(MakeTAID((u64)2216382443900), V2(83.000000, 31.000000));
        TA->Map.Areas[3] = MakeTAArea(MakeTAID((u64)2216382443904), V2(87.000000, 57.000000));
        TA->Map.Areas[4] = MakeTAArea(MakeTAID((u64)2216382443916), V2(94.000000, 52.000000));
        TA->Map.Areas[5] = MakeTAArea(MakeTAID((u64)2216382443928), V2(45.000000, 21.000000));
        TA->Map.Areas[6] = MakeTAArea(MakeTAID((u64)2216382443944), V2(59.000000, 53.000000));
        TA->Map.Areas[7] = MakeTAArea(MakeTAID((u64)2216382443956), V2(109.000000, 56.000000));
        TA->Map.Areas[8] = MakeTAArea(MakeTAID((u64)2216382443964), V2(71.000000, 44.000000));
        TA->Map.Areas[9] = MakeTAArea(MakeTAID((u64)2216382443968), V2(60.000000, 60.000000));
        TA->Map.Areas[10] = MakeTAArea(MakeTAID((u64)2216382443980), V2(84.000000, 48.000000));
        TA->Map.Areas[11] = MakeTAArea(MakeTAID((u64)2216382443992), V2(93.000000, 41.000000));
        TA->Map.Areas[12] = MakeTAArea(MakeTAID((u64)2216382444004), V2(84.000000, 41.000000));
        TA->Map.Areas[13] = MakeTAArea(MakeTAID((u64)2216382444016), V2(45.000000, 45.000000));
        TA->Map.Areas[14] = MakeTAArea(MakeTAID((u64)2216382444028), V2(93.000000, 31.000000));
        TA->Map.Areas[15] = MakeTAArea(MakeTAID((u64)2216382443580), V2(61.000000, 35.000000));
        TA->Map.Areas[16] = MakeTAArea(MakeTAID((u64)2216382444036), V2(72.000000, 38.000000));
        TA->Map.Areas[17] = MakeTAArea(MakeTAID((u64)2216382444052), V2(47.000000, 36.000000));
        TA->Map.Areas[18] = MakeTAArea(MakeTAID((u64)2216382444068), V2(61.000000, 27.000000));
    }
}
#endif // GENERATED_ASSET_DATA_H
